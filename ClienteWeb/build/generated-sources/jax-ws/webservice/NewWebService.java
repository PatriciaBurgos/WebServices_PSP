
package webservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NewWebService", targetNamespace = "http://WebService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NewWebService {


    /**
     * 
     * @param pass
     * @param login
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://WebService/", className = "webservice.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://WebService/", className = "webservice.LoginResponse")
    @Action(input = "http://WebService/NewWebService/loginRequest", output = "http://WebService/NewWebService/loginResponse")
    public Boolean login(
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "pass", targetNamespace = "")
        String pass);

    /**
     * 
     * @param res1
     * @param res2
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "resta", targetNamespace = "http://WebService/", className = "webservice.Resta")
    @ResponseWrapper(localName = "restaResponse", targetNamespace = "http://WebService/", className = "webservice.RestaResponse")
    @Action(input = "http://WebService/NewWebService/restaRequest", output = "http://WebService/NewWebService/restaResponse")
    public String resta(
        @WebParam(name = "res1", targetNamespace = "")
        String res1,
        @WebParam(name = "res2", targetNamespace = "")
        String res2);

    /**
     * 
     * @param mul2
     * @param mul1
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiplicacion", targetNamespace = "http://WebService/", className = "webservice.Multiplicacion")
    @ResponseWrapper(localName = "multiplicacionResponse", targetNamespace = "http://WebService/", className = "webservice.MultiplicacionResponse")
    @Action(input = "http://WebService/NewWebService/multiplicacionRequest", output = "http://WebService/NewWebService/multiplicacionResponse")
    public String multiplicacion(
        @WebParam(name = "mul1", targetNamespace = "")
        String mul1,
        @WebParam(name = "mul2", targetNamespace = "")
        String mul2);

    /**
     * 
     * @param dig1
     * @param dig2
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "suma", targetNamespace = "http://WebService/", className = "webservice.Suma")
    @ResponseWrapper(localName = "sumaResponse", targetNamespace = "http://WebService/", className = "webservice.SumaResponse")
    @Action(input = "http://WebService/NewWebService/sumaRequest", output = "http://WebService/NewWebService/sumaResponse")
    public String suma(
        @WebParam(name = "dig1", targetNamespace = "")
        String dig1,
        @WebParam(name = "dig2", targetNamespace = "")
        String dig2);

    /**
     * 
     * @param div2
     * @param div1
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "division", targetNamespace = "http://WebService/", className = "webservice.Division")
    @ResponseWrapper(localName = "divisionResponse", targetNamespace = "http://WebService/", className = "webservice.DivisionResponse")
    @Action(input = "http://WebService/NewWebService/divisionRequest", output = "http://WebService/NewWebService/divisionResponse")
    public String division(
        @WebParam(name = "div1", targetNamespace = "")
        String div1,
        @WebParam(name = "div2", targetNamespace = "")
        String div2);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://WebService/", className = "webservice.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://WebService/", className = "webservice.HelloResponse")
    @Action(input = "http://WebService/NewWebService/helloRequest", output = "http://WebService/NewWebService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "programa", targetNamespace = "http://WebService/", className = "webservice.Programa")
    @ResponseWrapper(localName = "programaResponse", targetNamespace = "http://WebService/", className = "webservice.ProgramaResponse")
    @Action(input = "http://WebService/NewWebService/programaRequest", output = "http://WebService/NewWebService/programaResponse")
    public String programa();

}
